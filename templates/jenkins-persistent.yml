apiVersion: v1
kind: Template
metadata:
  name: jenkins
parameters:
- name: KUBERNETES_NAMESPACE
  description: The target namespace
  value: syndesis-ci
  required: true
- name: ROUTE_HOSTNAME
  description: The external hostname to access the iPaaS
  value: jenkins-syndesis-ci.b6ff.rh-idev.openshiftapps.com
  required: true
- name: GITHUB_USERNAME
  description: The github username (for project scanning and webhook management).
  required: true
- name: GITHUB_PASSWORD
  description: The github password (for project scanning and webhook management).
  required: true
- name: GITHUB_ACCESS_TOKEN
  description: The github access token (for webhook management).
  required: true
- name: GITHUB_OAUTH_CLIENT_ID
  description: The github oauth client id.
  required: true
- name: GITHUB_OAUTH_CLIENT_SECRET
  description: The github oauth client secret.
  required: true
- name: JENKINS_DATA_CLAIM_NAME
  description: The name of the PersistentVolumeClaim to use for saving Jenkins state.
  value: jenkins-data
- name: SYNDESIS_CI_VERSION
  description: The version of syndesis CI to use.
  value: latest
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: jenkins
    labels:
      app: jenkins
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: "{\"kind\":\"OAuthRedirectReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Route\",\"name\":\"jenkins\"}}"
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
    labels:
      app: jenkins
    name: jenkins-2-centos7
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: docker.io/openshift/jenkins-2-centos7:latest
      importPolicy: {}
      name: latest
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: jenkins
    name: syndesis-jenkins
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: docker.io/syndesis/syndesis-jenkins:latest
      importPolicy: {}
      name: latest
- apiVersion: v1
  kind: Secret
  metadata:
    labels:
      app: jenkins
    name: github-account
  type: kubernetes.io/basic-auth
  stringData:
    username: ${GITHUB_USERNAME}
    password: ${GITHUB_PASSWORD}
    token: ${GITHUB_ACCESS_TOKEN}
    oauthClientId: ${GITHUB_OAUTH_CLIENT_ID}
    oauthClientSecret: ${GITHUB_OAUTH_CLIENT_SECRET}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: jenkins
    name: jenkins
  spec:
    replicas: 1
    selector:
      name: jenkins
    strategy:
      recreateParams:
        timeoutSeconds: 1200
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: jenkins
          name: jenkins
      spec:
        containers:
        - env:
          - name: OPENSHIFT_ENABLE_OAUTH
            value: "true"
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: "true"
          - name: KUBERNETES_MASTER
            value: https://kubernetes.default:443
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: "true"
          - name: JNLP_SERVICE_NAME
            value: jenkins-jnlp
          - name: GITHUB_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: github-account
          - name: GITHUB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: github-account
          - name: GITHUB_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: github-account
          - name: GITHUB_OAUTH_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: oauthClientId
                name: github-account
          - name: GITHUB_OAUTH_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: oauthClientSecret
                name: github-account
          image: syndesis-jenkins
          imagePullPolicy: IfNotPresent
          name: jenkins
          ports:
            - containerPort: 50000
              name: "slave"
            - containerPort: 8080
              name: "http"
          livenessProbe:
            failureThreshold: 30
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 420
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: 2Gi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/jenkins
            name: jenkins-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        serviceAccount: jenkins
        serviceAccountName: jenkins
        terminationGracePeriodSeconds: 30
        volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins-data
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: syndesis-jenkins:${SYNDESIS_CI_VERSION}
          namespace: ${KUBERNETES_NAMESPACE}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jenkins
    name: jenkins
  spec:
    ports:
    - name: web
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      name: jenkins
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jenkins
    name: jenkins-jnlp
  spec:
    ports:
    - name: agent
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      name: jenkins
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: jenkins
    name: jenkins
  spec:
    host: ${ROUTE_HOSTNAME}
    path: /
    port:
      targetPort: 8080
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: jenkins
      weight: 100
- apiVersion: v1
  kind: RoleBinding
  metadata:
    name: syndesis:admins
  roleRef:
    name: admin
  subjects:
  - kind: ServiceAccount
    name: jenkins
